<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Namespaces>
  <Namespace Name="Rovio">
   <Messages>
    <Message Id="Rovio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rovio' in namespace name 'Rovio'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Rovio.API">
   <Messages>
    <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'API' in namespace name 'Rovio.API' by changing it to 'Api'.</Issue>
    </Message>
    <Message Id="Rovio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rovio' in namespace name 'Rovio.API'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Workshop_2___Forms">
   <Messages>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'Workshop_2___Forms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="G:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms\bin\Debug\Workshop 2 - Forms.exe">
   <Modules>
    <Module Name="workshop 2 - forms.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'Workshop 2 - Forms.exe' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Workshop 2 - Forms.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'Workshop 2 - Forms.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Rovio">
       <Types>
        <Type Name="Camera" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1880">In member 'Camera.Camera(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Framerate" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Framerate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1999">Correct the spelling of 'Framerate' in member name 'Camera.Framerate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Component" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'Component' to protected.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="125">In member 'Component.Component(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AutoUpdate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Component.AutoUpdate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#robot" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Component.robot' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Drive" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2208">In member 'Drive.Drive(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiagBackwardLeft(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Diag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2267">Correct the spelling of 'Diag' in member name 'Drive.DiagBackwardLeft(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiagBackwardRight(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Diag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2273">Correct the spelling of 'Diag' in member name 'Drive.DiagBackwardRight(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiagForwardLeft(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Diag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2255">Correct the spelling of 'Diag' in member name 'Drive.DiagForwardLeft(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiagForwardRight(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Diag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2261">Correct the spelling of 'Diag' in member name 'Drive.DiagForwardRight(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FilterColour" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Colour' in type name 'FilterColour'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ImageProcessor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#filters" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ImageProcessor.filters' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetColourSlicedImage(Rovio.FilterColour)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="ImageProcessor.cs" Line="117">Correct the spelling of 'Colour' in member name 'ImageProcessor.GetColourSlicedImage(FilterColour)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="ImageProcessor.cs" Line="117">In method 'ImageProcessor.GetColourSlicedImage(FilterColour)', correct the spelling of 'colour' in parameter name 'colour' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getObjectRectangle(Rovio.FilterColour)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="ImageProcessor.cs" Line="113">Correct the casing of 'get' in member name 'ImageProcessor.getObjectRectangle(FilterColour)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="colour" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="ImageProcessor.cs" Line="113">In method 'ImageProcessor.getObjectRectangle(FilterColour)', correct the spelling of 'colour' in parameter name 'colour' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessImages(System.Drawing.Bitmap,Rovio.FilterColour[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="colours" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="ImageProcessor.cs" Line="82">In method 'ImageProcessor.ProcessImages(Bitmap, FilterColour[])', correct the spelling of 'colours' in parameter name 'colours' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="ImageProcessor.cs" Line="85">In externally visible method 'ImageProcessor.ProcessImages(Bitmap, FilterColour[])', validate parameter 'colours' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#swappingBuffers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ImageProcessor.swappingBuffers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IRSensor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2098">In member 'IRSensor.IRSensor(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NavigationSensor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2151">In member 'NavigationSensor.NavigationSensor(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SignalStrength" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_SignalStrength()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2197">'NavigationSensor.SignalStrength.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Theta" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Theta()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2192">'NavigationSensor.Theta.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#X" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_X()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2182">'NavigationSensor.X.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Y" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Y()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2187">'NavigationSensor.Y.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Odometry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Odometry" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Odometry' in type name 'Odometry'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="2016">In member 'Odometry.Odometry(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Predator" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#RunRobot()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Predator.cs" Line="45">Method 'Predator.RunRobot()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Could not connect to the robot".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Predator.cs" Line="42">Modify 'Predator.RunRobot()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Predator.cs" Line="45">Change 'Predator.RunRobot()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Robot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Robot' because it creates members of the following IDisposable types: 'Robot.WebClientTimeOut'. If 'Robot' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#API" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Robot.API' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Camera" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Robot.Camera' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Drive" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Robot.Drive' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IRSensor" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Robot.IRSensor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NavigationSensor" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Robot.NavigationSensor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Odometry" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Robot.Odometry' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Odometry" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Odometry' in member name 'Robot.Odometry' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Request(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="74">Change either member or parameter name 'request' so that one differs from the other.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RobotBase" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#DetectObject(System.Drawing.Bitmap,Rovio.FilterColour)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="117">'RobotBase.DetectObject(Bitmap, FilterColour)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="117">The 'this' parameter (or 'Me' in Visual Basic) of 'RobotBase.DetectObject(Bitmap, FilterColour)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="colour" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="117">Parameter 'colour' of 'RobotBase.DetectObject(Bitmap, FilterColour)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DriveStraight(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="80">Method 'RobotBase.DriveStraight(int, int)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error: Velocity must be between -10 and 10".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Spin(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="112">Method 'RobotBase.Spin(int, int)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error: Velocity must be between -10 and 10".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#threadLock" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RobotBase.threadLock' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCamera()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="159">In method 'RobotBase.UpdateCamera()', call System.IDisposable.Dispose on object 'new Font(FontFamily.GenericSansSerif, 6F, FontStyle.Regular)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="157">In method 'RobotBase.UpdateCamera()', call System.IDisposable.Dispose on object 'new Pen(Color.Tomato)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="159">In method 'RobotBase.UpdateCamera()', call System.IDisposable.Dispose on object 'new SolidBrush(Color.Lime)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="169">Method 'RobotBase.UpdateCamera()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Image processing execution time = ".</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="RobotBase.cs" Line="159">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'RobotBase.UpdateCamera()' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Rovio.API">
       <Types>
        <Type Name="API" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'API' by changing it to 'Api'.</Issue>
          </Message>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'API' conflicts in whole or in part with the namespace name 'Rovio.API'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1847">In member 'API.API(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Camera" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'API.Camera' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Mail" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'API.Mail' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Movement" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'API.Movement' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Network" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'API.Network' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Other" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'API.Other' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Server" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'API.Server' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Time" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'API.Time' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#User" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'API.User' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Camera" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1024">In member 'Camera.Camera(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Brightness" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1083">Because property 'Camera.Brightness' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_Brightness(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1083">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Camera.Brightness.set(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Compression" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1058">Because property 'Camera.Compression' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FlickerFrequency" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1101">Because property 'Camera.FlickerFrequency' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Framerate" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Framerate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1078">Correct the spelling of 'Framerate' in member name 'Camera.Framerate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1078">Because property 'Camera.Framerate' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_Framerate(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1078">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Camera.Framerate.set(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GetImage()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1123">Change 'Camera.GetImage()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MicVolume" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1093">Because property 'Camera.MicVolume' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_MicVolume(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1093">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Camera.MicVolume.set(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Resolution" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1032">Because property 'Camera.Resolution' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SpeakerVolume" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1088">Because property 'Camera.SpeakerVolume' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_SpeakerVolume(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1088">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Camera.SpeakerVolume.set(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Camera+CameraFlickerFrequency" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AUTO" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AUTO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AUTO' in member name 'Camera.CameraFlickerFrequency.AUTO' by changing it to 'Auto'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Camera+HeadPosition" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DOWN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DOWN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DOWN' in member name 'Camera.HeadPosition.DOWN' by changing it to 'Down'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIDDLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MIDDLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIDDLE' in member name 'Camera.HeadPosition.MIDDLE' by changing it to 'Middle'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Camera+ImageCompression" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LOW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOW' in member name 'Camera.ImageCompression.LOW' by changing it to 'Low'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MED' in member name 'Camera.ImageCompression.MED' by changing it to 'Med'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Camera+ImageResolution" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CGA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CGA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CGA' in member name 'Camera.ImageResolution.CGA' by changing it to 'Cga'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CIF" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CIF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CIF' in member name 'Camera.ImageResolution.CIF' by changing it to 'Cif'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QCIF" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="QCIF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QCIF' in member name 'Camera.ImageResolution.QCIF' by changing it to 'Qcif'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VGA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="VGA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VGA' in member name 'Camera.ImageResolution.VGA' by changing it to 'Vga'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Mail" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">The type name 'Mail' conflicts in whole or in part with the namespace name 'System.Net.Mail' defined in the .NET Framework. Rename the type to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1412">In member 'Mail.Mail(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMail()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1438">Change 'Mail.GetMail()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Movement" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="264">In member 'Movement.Movement(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmailImage(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="address" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="406">In member 'Movement.EmailImage(string)', correct the casing of 'address' in parameter name 'email_address' by changing it to 'Address'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="406">In member 'Movement.EmailImage(string)', remove the underscores from parameter name 'email_address'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLibNSVersion()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="403">Change 'Movement.GetLibNSVersion()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMCUReport()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="374">'Movement.GetMCUReport()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="MCU" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="359">Correct the casing of 'MCU' in member name 'Movement.GetMCUReport()' by changing it to 'Mcu'.</Issue>
            </Message>
            <Message Id="GetMCUReport" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="374">Correct the spelling of the unrecognized token 'GetMCUReport' in the literal '"Movement::GetMCUReport, Wrong response."'.</Issue>
            </Message>
            <Message Id="sub" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="368">'Movement.GetMCUReport()' declares a variable, 'sub', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="361">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'Movement.GetMCUReport()' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="364">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'Movement.GetMCUReport()' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="359">Change 'Movement.GetMCUReport()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPathList()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="294">Change 'Movement.GetPathList()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReport()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="279">Change 'Movement.GetReport()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStatus()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="383">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.GetStatus()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="382">Change 'Movement.GetStatus()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTuningParameters()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="334">Change 'Movement.GetTuningParameters()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ManualDrive" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Movement.ManualDrive' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MCUReport" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Movement.MCUReport' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadParameter(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="399">'Movement.ReadParameter(int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="ReadParameter" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="399">Correct the spelling of the unrecognized token 'ReadParameter' in the literal '"Movement::ReadParameter, Wrong response."'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="396">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReadParameter(int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="397">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReadParameter(int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="392">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Movement.ReadParameter(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="393">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReadParameter(int)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="394">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReadParameter(int)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="395">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReadParameter(int)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenamePath(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="path" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="315">In member 'Movement.RenamePath(string, string)', correct the casing of 'path' in parameter name 'new_path' by changing it to 'Path'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="315">In member 'Movement.RenamePath(string, string)', correct the casing of 'path' in parameter name 'old_path' by changing it to 'Path'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="315">In member 'Movement.RenamePath(string, string)', remove the underscores from parameter name 'new_path'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="315">In member 'Movement.RenamePath(string, string)', remove the underscores from parameter name 'old_path'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Report" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Movement.Report' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetNavStateMachine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Nav" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="337">Correct the spelling of 'Nav' in member name 'Movement.ResetNavStateMachine()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveParameter(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="387">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Movement.SaveParameter(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="387">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Movement.SaveParameter(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TuningParameters" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Movement.TuningParameters' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Movement+ChargerStatus" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CHARGING" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CHARGING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CHARGING' in member name 'Movement.ChargerStatus.CHARGING' by changing it to 'Charging'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#COMPLETED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="COMPLETED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'COMPLETED' in member name 'Movement.ChargerStatus.COMPLETED' by changing it to 'Completed'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ERROR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ERROR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ERROR' in member name 'Movement.ChargerStatus.ERROR' by changing it to 'Error'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IDLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IDLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IDLE' in member name 'Movement.ChargerStatus.IDLE' by changing it to 'Idle'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Movement+ManualDriveComponent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Movement.ManualDriveComponent'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="683">In member 'Movement.ManualDriveComponent.ManualDriveComponent(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiagBackwardLeft(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Diag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="749">Correct the spelling of 'Diag' in member name 'Movement.ManualDriveComponent.DiagBackwardLeft(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiagBackwardRight(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Diag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="755">Correct the spelling of 'Diag' in member name 'Movement.ManualDriveComponent.DiagBackwardRight(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiagForwardLeft(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Diag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="737">Correct the spelling of 'Diag' in member name 'Movement.ManualDriveComponent.DiagForwardLeft(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiagForwardRight(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Diag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="743">Correct the spelling of 'Diag' in member name 'Movement.ManualDriveComponent.DiagForwardRight(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Drive(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="690">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Movement.ManualDriveComponent.Drive(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="690">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Movement.ManualDriveComponent.Drive(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Movement+MCUReportComponent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MCU" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'MCU' in type name 'Movement.MCUReportComponent' by changing it to 'Mcu'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Movement.MCUReportComponent'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="795">In member 'Movement.MCUReportComponent.MCUReportComponent(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Movement+MovementResponseException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'Movement.MovementResponseException': protected MovementResponseException(SerializationInfo, StreamingContext).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'Movement.MovementResponseException': public MovementResponseException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'Movement.MovementResponseException': public MovementResponseException(String).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'Movement.MovementResponseException': public MovementResponseException(String, Exception).</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'Movement.MovementResponseException' as this type implements ISerializable.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Movement.MovementResponseException'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="881">In member 'Movement.MovementResponseException.MovementResponseException(int)', remove the underscores from parameter name '_value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Movement+NavigationState" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DOCKING" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DOCKING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DOCKING' in member name 'Movement.NavigationState.DOCKING' by changing it to 'Docking'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HOMING" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HOMING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HOMING' in member name 'Movement.NavigationState.HOMING' by changing it to 'Homing'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IDLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IDLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IDLE' in member name 'Movement.NavigationState.IDLE' by changing it to 'Idle'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PLAYING_PATH" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PATH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PATH' in member name 'Movement.NavigationState.PLAYING_PATH' by changing it to 'Path'.</Issue>
            </Message>
            <Message Id="PLAYING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PLAYING' in member name 'Movement.NavigationState.PLAYING_PATH' by changing it to 'Playing'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Movement.NavigationState.PLAYING_PATH'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RECORDING_PATH" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PATH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PATH' in member name 'Movement.NavigationState.RECORDING_PATH' by changing it to 'Path'.</Issue>
            </Message>
            <Message Id="RECORDING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'RECORDING' in member name 'Movement.NavigationState.RECORDING_PATH' by changing it to 'Recording'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Movement.NavigationState.RECORDING_PATH'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Movement+ReportComponent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Movement.ReportComponent'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="419">In member 'Movement.ReportComponent.ReportComponent(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BatteryLevel" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_BatteryLevel()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="591">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.BatteryLevel.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BeaconSS" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_BeaconSS()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="461">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.BeaconSS.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BeaconX" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_BeaconX()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="466">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.BeaconX.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Brightness" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Brightness()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="518">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Brightness.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Charging" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Charging()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="598">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Charging.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Compression" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Compression()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="528">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Compression.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DDNSState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DDNS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="578">Correct the casing of 'DDNS' in member name 'Movement.ReportComponent.DDNSState' by changing it to 'Ddns'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_DDNSState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="578">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.DDNSState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#EmailState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_EmailState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="583">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.EmailState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Flags" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="513">Replace the term 'Flags' in member name 'Movement.ReportComponent.Flags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Flags()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="513">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Flags.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FlickerFrequency" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_FlickerFrequency()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="611">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.FlickerFrequency.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Framerate" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Framerate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="533">Correct the spelling of 'Framerate' in member name 'Movement.ReportComponent.Framerate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Framerate()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="533">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Framerate.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#HeadPosition" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_HeadPosition()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="606">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.HeadPosition.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MicVolume" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_MicVolume()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="557">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.MicVolume.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#NavigationSS" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_NavigationSS()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="456">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.NavigationSS.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#NextRoomID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="473">Correct the casing of 'ID' in member name 'Movement.ReportComponent.NextRoomID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_NextRoomID()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="473">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.NextRoomID.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#NextRoomSS" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_NextRoomSS()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="480">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.NextRoomSS.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Privilege" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Privilege()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="540">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Privilege.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Resistance" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Resistance()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="495">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Resistance.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Resolution" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Resolution()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="523">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Resolution.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#RoomID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="449">Correct the casing of 'ID' in member name 'Movement.ReportComponent.RoomID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_RoomID()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="449">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.RoomID.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ShowTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ShowTime" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="569">The compound word 'ShowTime' in member name 'Movement.ReportComponent.ShowTime' exists as a discrete term. If your usage is intended to be single word, case it as 'Showtime' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_ShowTime()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="569">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.ShowTime.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SpeakerVolume" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_SpeakerVolume()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="552">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.SpeakerVolume.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#StateMachine" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_StateMachine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="500">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.StateMachine.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Status" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Status()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="485">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Status.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Theta" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Theta()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="442">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Theta.get()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#UIStatus" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_UIStatus()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="490">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.UIStatus.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#UserCheck" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_UserCheck()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="547">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.UserCheck.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#WayPoint" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WayPoint" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="505">The compound word 'WayPoint' in member name 'Movement.ReportComponent.WayPoint' exists as a discrete term. If your usage is intended to be single word, case it as 'Waypoint' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_WayPoint()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="505">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.WayPoint.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#WifiSS" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wifi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="562">Correct the spelling of 'Wifi' in member name 'Movement.ReportComponent.WifiSS' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_WifiSS()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="562">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.WifiSS.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#X" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="432">Consider providing a more meaningful name than member name 'Movement.ReportComponent.X'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_X()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="432">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.X.get()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Y" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="437">Consider providing a more meaningful name than member name 'Movement.ReportComponent.Y'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Y()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="437">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Movement.ReportComponent.Y.get()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Movement+TuningParametersComponent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Movement.TuningParametersComponent'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="623">In member 'Movement.TuningParametersComponent.TuningParametersComponent(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DockTimeout" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_DockTimeout()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="671">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.TuningParametersComponent.DockTimeout.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DriveTurn" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_DriveTurn()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="651">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.TuningParametersComponent.DriveTurn.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Forward" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Forward()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="641">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.TuningParametersComponent.Forward.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#HomingTurn" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_HomingTurn()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="656">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.TuningParametersComponent.HomingTurn.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#LeftRight" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_LeftRight()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="636">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.TuningParametersComponent.LeftRight.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ManDrive" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ManDrive()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="661">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.TuningParametersComponent.ManDrive.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ManTurn" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ManTurn()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="666">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.TuningParametersComponent.ManTurn.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Reverse" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Reverse()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="646">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Movement.TuningParametersComponent.Reverse.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="MovementComponent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'MovementComponent' to protected.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="146">In member 'MovementComponent.MovementComponent(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetParameter(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="164">'MovementComponent.GetParameter(string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="GetParamemter" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="164">Correct the spelling of the unrecognized token 'GetParamemter' in the literal '"MovementComponent::GetParamemter, Wrong value."'.</Issue>
            </Message>
            <Message Id="MovementComponent" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="164">Correct the spelling of the unrecognized token 'MovementComponent' in the literal '"MovementComponent::GetParamemter, Wrong value."'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="154">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'MovementComponent.GetParameter(string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="158">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'MovementComponent.GetParameter(string)' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="157">In externally visible method 'MovementComponent.GetParameter(string)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#report" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MovementComponent.report' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Request(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="196">'MovementComponent.Request(string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="MovementComponent" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="196">Correct the spelling of the unrecognized token 'MovementComponent' in the literal '"MovementComponent::Request, Wrong response."'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="192">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MovementComponent.Request(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="190">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'MovementComponent.Request(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="177">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'MovementComponent.Request(string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="180">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'MovementComponent.Request(string)' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="184">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'MovementComponent.Request(string)' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="186">Because the behavior of 'string.IndexOf(string, int)' could vary based on the current user's locale settings, replace this call in 'MovementComponent.Request(string)' with a call to 'string.IndexOf(string, int, StringComparison)'. If the result of 'string.IndexOf(string, int, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Network" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1262">In member 'Network.Network(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDDNS()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DDNS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1344">Correct the casing of 'DDNS' in member name 'Network.GetDDNS()' by changing it to 'Ddns'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1344">Change 'Network.GetDDNS()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMAC()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MAC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1360">Correct the casing of 'MAC' in member name 'Network.GetMAC()' by changing it to 'Mac'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1360">Change 'Network.GetMAC()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWlan()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wlan" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1305">Correct the spelling of 'Wlan' in member name 'Network.GetWlan()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1305">Change 'Network.GetWlan()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDDNS(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DDNS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1332">Correct the casing of 'DDNS' in member name 'Network.SetDDNS(string)' by changing it to 'Ddns'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMAC(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MAC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1352">Correct the casing of 'MAC' in member name 'Network.SetMAC(string)' by changing it to 'Mac'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWlan(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wlan" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1297">Correct the spelling of 'Wlan' in member name 'Network.SetWlan(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Other" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1466">In member 'Other.Other(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAudio()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1542">Change 'Other.GetAudio()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCameraName()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1484">Change 'Other.GetCameraName()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLog()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1492">Change 'Other.GetLog()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMediaFormat()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1572">Change 'Other.GetMediaFormat()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetVer()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ver" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1501">Correct the spelling of 'Ver' in member name 'Other.GetVer()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1501">Change 'Other.GetVer()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Status" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Other.Status' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Other+StatusComponent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Other.StatusComponent'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1611">In member 'Other.StatusComponent.StatusComponent(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AudioState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_AudioState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1765">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.AudioState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#AudioVolume" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_AudioVolume()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1755">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.AudioVolume.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#BatteryLevel" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_BatteryLevel()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1795">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.BatteryLevel.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Brightness" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Brightness()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1655">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Brightness.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CameraState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_CameraState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1625">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.CameraState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ChannelMode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ChannelMode()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1745">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.ChannelMode.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ChannelValue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ChannelValue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1750">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.ChannelValue.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Compression" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Compression()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1670">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Compression.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Contrast" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Contrast()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1660">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Contrast.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DynamicDNSState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DNS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1760">Correct the casing of 'DNS' in member name 'Other.StatusComponent.DynamicDNSState' by changing it to 'Dns'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_DynamicDNSState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1760">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.DynamicDNSState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#EmailState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_EmailState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1686">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.EmailState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FlickerFrequency" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_FlickerFrequency()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1740">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.FlickerFrequency.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Focus" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Focus()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1650">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Focus.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Framerate" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Framerate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1770">Correct the spelling of 'Framerate' in member name 'Other.StatusComponent.Framerate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Framerate()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1770">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Framerate.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FTPState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FTP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1710">Correct the casing of 'FTP' in member name 'Other.StatusComponent.FTPState' by changing it to 'Ftp'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_FTPState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1710">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.FTPState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Hue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Hue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1725">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Hue.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ImageFileLength" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ImageFileLength()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1697">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.ImageFileLength.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MicVolume" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_MicVolume()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1780">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.MicVolume.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ModemState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ModemState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1630">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.ModemState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MonitorRect" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_MonitorRect()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1704">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.MonitorRect.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MotionDetectedIndex" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_MotionDetectedIndex()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1720">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.MotionDetectedIndex.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#MotionDetectWay" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_MotionDetectWay()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1735">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.MotionDetectWay.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#PictureIndex" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_PictureIndex()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1680">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.PictureIndex.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#PPPoEState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EState" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1635">The compound word 'EState' in member name 'Other.StatusComponent.PPPoEState' exists as a discrete term. If your usage is intended to be single word, case it as 'Estate' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Po" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1635">Correct the casing of 'Po' in member name 'Other.StatusComponent.PPPoEState' by changing it to 'PO'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_PPPoEState()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1635">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.PPPoEState.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Privilege" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Privilege()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1675">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Privilege.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Resolution" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Resolution()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1665">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Resolution.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Saturation" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Saturation()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1715">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Saturation.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Sharpness" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Sharpness()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1730">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Sharpness.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ShowTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ShowTime" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1785">The compound word 'ShowTime' in member name 'Other.StatusComponent.ShowTime' exists as a discrete term. If your usage is intended to be single word, case it as 'Showtime' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_ShowTime()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1785">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.ShowTime.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SpeakerVolume" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_SpeakerVolume()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1775">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.SpeakerVolume.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Update()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1619">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.Update()' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UserCheck" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_UserCheck()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1692">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.UserCheck.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#WifiStrength" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wifi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1790">Correct the spelling of 'Wifi' in member name 'Other.StatusComponent.WifiStrength' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_WifiStrength()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1790">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.WifiStrength.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#XDirection" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_XDirection()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1640">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.XDirection.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#YDirection" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_YDirection()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1645">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Other.StatusComponent.YDirection.get()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Server" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">The type name 'Server' conflicts in whole or in part with the namespace name 'Microsoft.SqlServer.Server' defined in the .NET Framework. Rename the type to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1373">In member 'Server.Server(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHTTP()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HTTP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1399">Correct the casing of 'HTTP' in member name 'Server.GetHTTP()' by changing it to 'Http'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1399">Change 'Server.GetHTTP()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetHTTP(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HTTP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1381">Correct the casing of 'HTTP' in member name 'Server.SetHTTP(string)' by changing it to 'Http'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetHTTP(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HTTP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1391">Correct the casing of 'HTTP' in member name 'Server.SetHTTP(string, string)' by changing it to 'Http'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Time" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1200">In member 'Time.Time(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLogo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1249">Change 'Time.GetLogo()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTime()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1220">Change 'Time.GetTime()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetTime(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="zone" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1210">In member 'Time.SetTime(int, int)', correct the casing of 'zone' in parameter name 'time_zone' by changing it to 'Zone'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1210">In member 'Time.SetTime(int, int)', remove the underscores from parameter name 'time_zone'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="User" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rovio.Robot)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1136">In member 'User.User(Robot)', remove the underscores from parameter name '_robot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMyself(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="privilege" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1144">In member 'User.GetMyself(bool)', correct the casing of 'privilege' in parameter name 'show_privilege' by changing it to 'Privilege'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1144">In member 'User.GetMyself(bool)', remove the underscores from parameter name 'show_privilege'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUser(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="privilege" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1173">In member 'User.GetUser(bool)', correct the casing of 'privilege' in parameter name 'show_privilege' by changing it to 'Privilege'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="Rovio.cs" Line="1173">In member 'User.GetUser(bool)', remove the underscores from parameter name 'show_privilege'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Workshop_2___Forms">
       <Types>
        <Type Name="ImageViewer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="ImageViewer.Designer.cs" Line="50">Method 'ImageViewer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ImageViewer".</Issue>
            </Message>
            <Message Id="ImageViewer" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="ImageViewer.Designer.cs" Line="50">Correct the spelling of the unrecognized token 'ImageViewer' in the literal '"ImageViewer"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="MainForm.Designer.cs" Line="39">Method 'MainForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "MainForm".</Issue>
            </Message>
            <Message Id="MainForm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="MainForm.Designer.cs" Line="39">Correct the spelling of the unrecognized token 'MainForm' in the literal '"MainForm"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MainForm_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="MainForm.cs" Line="41">In method 'MainForm.MainForm_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'object_view' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-03-31 18:39:10Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="g:\Uni\Year three\Vision and Robotics\Robotics\CMP3641M Robotics workshop 2\Workshop 2\Workshop 2 - Forms" File="MainForm.cs" Line="42">Method 'MainForm.MainForm_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Objects".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Remove the underscores from namespace name '{0}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
   <Name>Implement standard exception constructors</Name>
   <Description>Multiple constructors are required to correctly implement a custom exception. Missing constructors can make your exception unusable in certain scenarios. For example, the serialization constructor is required for handling exceptions in XML Web services.</Description>
   <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182151.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
   <Name>Mark ISerializable types with SerializableAttribute</Name>
   <Description>The System.Runtime.Serialization.ISerializable interface allows the type to customize its serialization, while the Serializable attribute enables the runtime to recognize the type as being serializable.</Description>
   <Resolution Name="Default">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182350.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719">
   <Name>Parameter names should not match member names</Name>
   <Description>Parameter names should be distinct from member names.</Description>
   <Resolution Name="Default">Change either member or parameter name {0} so that one differs from the other.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182252.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044">
   <Name>Properties should not be write only</Name>
   <Description>Write-only properties usually indicate a flawed design.</Description>
   <Resolution Name="AddGetter">Because property {0} is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182165.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="Default">The type name {0} conflicts in whole or in part with the namespace name '{1}'. Change either name to eliminate the conflict.</Resolution>
   <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="MemberNoAlternate">Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
